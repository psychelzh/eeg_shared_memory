{
  "hash": "5f020707433f5c7c4f5566715b742fdc",
  "result": {
    "markdown": "---\ntitle: Representation Analysis\nauthor:\n  - name: Liang Zhang\n  - name: Jintao Sheng\nformat:\n  html:\n    code-fold: true\n    toc: true\nexecute:\n  warning: false\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n# Inter-subject representation similarity\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrsa_inter_by_trial <- arrow::read_parquet(\n  here::here(\"data/type-inter_acq-trial_rs.parquet\")\n)\nevents_encoding <- read_csv(\n  here::here(\"data/group_task-wordencoding_events.csv\"),\n  show_col_types = FALSE\n)\nsubjs_id <- unique(events_encoding$subj_id)\nwords_type <- events_encoding |>\n  distinct(trial_id, word_id, word_category)\nevents_retrieval <- read_csv(\n  here::here(\"data/group_task-wordretrieval_events.csv\"),\n  show_col_types = FALSE\n)\nsubj_resp_types <- events_retrieval |>\n  filter(memory_type > 0) |>\n  select(subj_id, word_id, response_type)\nrsa_inter_by_trial_with_resp <- rsa_inter_by_trial |>\n  left_join(words_type, by = \"trial_id\") |>\n  left_join(\n    subj_resp_types,\n    by = join_by(subj_id_row == subj_id, word_id)\n  ) |>\n  left_join(\n    subj_resp_types,\n    by = join_by(subj_id_col == subj_id, word_id),\n    suffix = c(\"_row\", \"_col\")\n  ) |>\n  filter(response_type_row == response_type_col) |>\n  filter(\n    sum(!is.na(fisher_z)) >= 5,\n    .by = c(region_id, word_category, contains(\"subj_id\"))\n  ) |>\n  rename(response_type = response_type_row) |>\n  select(-response_type_col)\n```\n:::\n\n\n## Abstract vs Concrete\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrsa_inter_by_trial_with_resp |>\n  summarise(\n    mean_se(fisher_z),\n    .by = c(region_id, word_category)\n  ) |>\n  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +\n  geom_col(aes(fill = word_category), position = position_dodge(width = 0.4), width = 0.4) +\n  geom_errorbar(aes(group = word_category), position = position_dodge(width = 0.4), width = 0) +\n  scale_x_continuous(name = \"Region\", breaks = scales::breaks_width(1)) +\n  scale_y_continuous(name = \"Intersubject Correlation\") +\n  ggsci::scale_fill_d3(name = \"Word Type\") +\n  ggpubr::theme_pubclean()\n```\n\n::: {.cell-output-display}\n![Verify if intersubject similarity of concrete is larger than that of abstract.](analysis_notes_files/figure-html/fig-inter-abs-con-1.png){#fig-inter-abs-con width=672}\n:::\n:::\n\n\n## Subsequent memory effect\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrsa_inter_by_trial_with_resp |>\n  summarise(\n    mean_se(fisher_z),\n    .by = c(region_id, response_type)\n  ) |>\n  mutate(\n    response_type = case_match(\n      response_type,\n      \"remember\" ~ \"Rem\",\n      \"know\" ~ \"Know\",\n      \"unsure\" ~ \"Unsure\",\n      \"new\" ~ \"New\",\n      .ptype = factor(levels = c(\"Rem\", \"Know\", \"Unsure\", \"New\"))\n    )\n  ) |>\n  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +\n  geom_col(aes(fill = response_type), position = position_dodge(width = 0.4), width = 0.4) +\n  geom_errorbar(aes(group = response_type), position = position_dodge(width = 0.4), width = 0) +\n  scale_x_continuous(name = \"Region\", breaks = scales::breaks_width(1)) +\n  scale_y_continuous(name = \"Intersubject Correlation\") +\n  scale_fill_brewer(name = \"Mem Type\", palette = \"Oranges\", direction = -1) +\n  ggpubr::theme_pubclean()\n```\n\n::: {.cell-output-display}\n![Average inter-subject representation similarity among different memory conditions](analysis_notes_files/figure-html/fig-inter-mem-eff-1.png){#fig-inter-mem-eff width=672}\n:::\n:::\n\n\n# Predict Memory ability\n\nThe indicator calculation is based on [@manns2003].\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# mainly d' scores for remember and know\ncount_trials <- events_retrieval |>\n  distinct(word_id, old_new) |>\n  count(old_new, name = \"n_total\")\nmem_ability <- events_retrieval |>\n  mutate(\n    old_new = factor(old_new, c(\"old\", \"new\")),\n    response_type = factor(\n      response_type,\n      c(\"remember\", \"know\", \"unsure\", \"new\")\n    )\n  ) |>\n  filter(memory_type > 0) |>\n  count(subj_id, response_type, old_new, .drop = FALSE) |>\n  left_join(count_trials, by = \"old_new\") |>\n  mutate(\n    rate = (n + 0.5) / (n_total + 1),\n    .by = c(subj_id, response_type)\n  ) |>\n  filter(response_type %in% c(\"remember\", \"know\")) |>\n  mutate(\n    type = case_match(\n      old_new,\n      \"old\" ~ \"hr\",\n      \"new\" ~ \"far\"\n    )\n  ) |>\n  pivot_wider(\n    id_cols = subj_id,\n    names_from = c(response_type, type),\n    values_from = rate\n  ) |>\n  mutate(\n    dplyover::across2(\n      contains(\"know\"),\n      contains(\"remember\"),\n      ~ .x / (1 - .y),\n      .names = \"knowadj_{suf}\"\n    )\n  ) |>\n  mutate(\n    dplyover::across2(\n      contains(\"hr\"),\n      contains(\"far\"),\n      ~ qnorm(.x) - qnorm(.y),\n      .names = \"dprime_{pre}\"\n    )\n  ) |>\n  select(subj_id, starts_with(\"dprime\")) |>\n  pivot_longer(\n    starts_with(\"dprime\"),\n    names_to = c(\".value\", \"mem_type\"),\n    names_pattern = \"(.+)_(.+)\"\n  )\n```\n:::\n\n\n## Individual-to-group synchronization predicts memory performance\n\n\n::: {#fig-predict-performance .cell .column-page}\n\n```{.r .cell-code}\nrsa_group_whole <- arrow::read_parquet(\n  here::here(\"data/type-group_acq-whole_rs.parquet\")\n)\nrsa_group_whole |>\n  inner_join(mem_ability, by = \"subj_id\", relationship = \"many-to-many\") |>\n  filter(mem_type %in% c(\"knowadj\", \"remember\")) |>\n  ggplot(aes(fisher_z, dprime, color = mem_type)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", formula = y ~ x) +\n  ggpmisc::stat_correlation(\n    ggpmisc::use_label(c(\"r\", \"p.value\")),\n    small.r = TRUE,\n    small.p = TRUE\n  ) +\n  scale_color_brewer(palette = \"Dark2\", guide = \"none\") +\n  scale_x_continuous(\n    name = \"Individual-to-Group Similarity\",\n    breaks = scales::breaks_pretty(n = 4)\n  ) +\n  scale_y_continuous(name = \"d'\") +\n  facet_grid(\n    rows = vars(mem_type),\n    cols = vars(region_id),\n    labeller = labeller(\n      mem_type = c(\n        knowadj = \"Familiarity\",\n        remember = \"Recollection\"\n      )\n    ),\n    scales = \"free_x\",\n  ) +\n  ggpubr::theme_pubr()\n\nrsa_group_by_trial <- arrow::read_parquet(\n  here::here(\"data/type-group_acq-trial_rs.parquet\")\n)\nrsa_group_by_trial |>\n  summarise(\n    mean_fisher_z = mean(fisher_z, na.rm = TRUE),\n    .by = c(region_id, subj_id)\n  ) |>\n  inner_join(mem_ability, by = \"subj_id\", relationship = \"many-to-many\") |>\n  filter(mem_type != \"know\") |>\n  ggplot(aes(mean_fisher_z, dprime, color = mem_type)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", formula = y ~ x) +\n  ggpmisc::stat_correlation(\n    ggpmisc::use_label(c(\"r\", \"p.value\")),\n    small.r = TRUE,\n    small.p = TRUE\n  ) +\n  scale_color_brewer(palette = \"Dark2\", guide = \"none\") +\n  scale_x_continuous(\n    name = \"Average Individual-to-Group Similarity\",\n    breaks = scales::breaks_pretty(n = 4)\n  ) +\n  scale_y_continuous(name = \"d'\") +\n  facet_grid(\n    rows = vars(mem_type),\n    cols = vars(region_id),\n    labeller = labeller(\n      mem_type = c(\n        knowadj = \"Familiarity\",\n        remember = \"Recollection\"\n      )\n    ),\n    scales = \"free_x\",\n  ) +\n  ggpubr::theme_pubr()\n```\n\n::: {.cell-output-display}\n![Concatenate all trials into one time series](analysis_notes_files/figure-html/fig-predict-performance-1.png){#fig-predict-performance-1 width=1152}\n:::\n\n::: {.cell-output-display}\n![Average all trial-level synchronization](analysis_notes_files/figure-html/fig-predict-performance-2.png){#fig-predict-performance-2 width=1152}\n:::\n\nPredict memory performance from individual-to-group synchronization\n:::\n\n\n# References\n",
    "supporting": [
      "analysis_notes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}