{
  "hash": "210feb136a37339ab434931ebcd5ef82",
  "result": {
    "markdown": "---\ntitle: Representation Analysis\nauthor:\n  - name: Liang Zhang\n  - name: Jintao Sheng\nformat:\n  html:\n    code-fold: true\n    toc: true\nexecute:\n  warning: false\nbibliography: references.bib\n---\n\n::: {.cell}\n\n```{.r .cell-code}\ndevtools::load_all()\nlibrary(patchwork)\n\nbase_family <- \"Gill Sans MT\"\n\n# visualize scatter\nvis_scatter <- function(data, use, ylab, ..., facet = NULL) {\n  labels_used <- labels_index_name[use]\n  data |> \n    filter(index_name %in% use) |> \n    ggplot(aes(mean_fisher_z, score)) +\n    geom_point() +\n    stat_smooth(method = \"lm\", formula = y ~ x) +\n    ggpmisc::stat_correlation(\n      ggpmisc::use_label(c(\"r\", \"p.value\")),\n      small.r = TRUE,\n      small.p = TRUE\n    ) +\n    scale_x_continuous(\n      name = \"Average Individual-to-Group Similarity\",\n      breaks = scales::breaks_pretty(n = 4)\n    ) +\n    scale_y_continuous(name = ylab) +\n    facet +\n    ggpubr::theme_pubr(base_family = base_family) +\n    theme(axis.line = element_line(linewidth = 1))\n}\n\n# visualize significant clusters\nvis_cluster <- function(stats, clusters_p, ...,\n                        subset = NULL,\n                        thresh_p = 0.05,\n                        col_stats = estimate,\n                        col_p = p_perm,\n                        facet = NULL) {\n  if (!missing(subset)) {\n    stats <- filter(stats, {{ subset }})\n    clusters_p <- filter(clusters_p, {{ subset }})\n  }\n  clusters_p <- filter(clusters_p, {{ col_p }} < thresh_p)\n  max_statistic <- max(abs(range(pull(stats, {{ col_stats }}))))\n  ggplot() +\n    geom_raster(\n      data = stats,\n      mapping = aes(window_id, region_id, fill = {{ col_stats }})\n    ) +\n    geom_rect(\n      data = clusters_p,\n      mapping = aes(\n        xmin = start - 0.5,\n        xmax = end + 0.5,\n        ymin = region_id - 0.5,\n        ymax = region_id + 0.5\n      ),\n      color = \"black\",\n      fill = NA,\n      na.rm = TRUE\n    ) +\n    geom_text(\n      data = clusters_p,\n      mapping = aes(\n        (start + end) / 2,\n        region_id,\n        label = rstatix::p_format(\n          {{ col_p }}, \n          accuracy = 0.001\n        ) |> \n          rstatix::p_mark_significant()\n      ),\n      color = \"blue\",\n      na.rm = TRUE\n    ) +\n    colorspace::scale_fill_continuous_divergingx(\n      name = \"Pearson's Correlation\",\n      palette = \"RdBu\",\n      rev = TRUE\n    ) +\n    scale_x_continuous(\n      name = \"Encoding Time (s)\",\n      labels = \\(x) x * 0.02,\n      expand = expansion()\n    ) +\n    scale_y_continuous(\n      name = \"Region\",\n      breaks = scales::breaks_width(1),\n      expand = expansion()\n    ) +\n    facet +\n    ggpubr::theme_pubr(base_family = base_family) +\n    theme(\n      strip.background = element_blank(),\n      panel.spacing = unit(1, \"lines\"),\n      axis.line = element_blank()\n    )\n}\n```\n:::\n\n\n# Inter-subject representation similarity\n\n## Abstract vs Concrete\n\n\n::: {#fig-inter-abs-con .cell}\n\n```{.r .cell-code}\ntargets::tar_read(rsa_inter_avg_by_category) |>\n  summarise(\n    mean_se(mean_fisher_z),\n    .by = c(region_id, word_category)\n  ) |>\n  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +\n  geom_col(\n    aes(fill = word_category), \n    position = position_dodge(width = 0.8), \n    width = 0.7\n  ) +\n  geom_errorbar(\n    aes(group = word_category), \n    position = position_dodge(width = 0.8),\n    linewidth = 1,\n    width = 0.2\n  ) +\n  scale_x_continuous(name = \"Region\", breaks = scales::breaks_width(1)) +\n  scale_y_continuous(name = \"Intersubject Correlation\") +\n  scale_fill_grey(name = NULL, labels = str_to_title) +\n  ggpubr::theme_pubr(base_size = 24, base_family = base_family) +\n  theme(axis.line = element_line(linewidth = 1))\nggsave(\"publish/concr-vs-abstr.png\", width = 10, height = 6)\n```\n\n::: {.cell-output-display}\n![Without time window](index_files/figure-html/fig-inter-abs-con-1.png){#fig-inter-abs-con width=672}\n:::\n\nVerify if intersubject similarity of concrete is larger than that of abstract.\n:::\n\n\n[^window]: Step size: 20 ms; Window length: 100 ms. The same below.\n\n## Subsequent memory effect\n\n\n::: {#fig-inter-mem-eff .cell}\n\n```{.r .cell-code}\np_upper <- targets::tar_read(rsa_inter_avg_by_resp) |>\n  summarise(\n    mean_se(mean_fisher_z),\n    .by = c(region_id, response_type_shared)\n  ) |>\n  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +\n  geom_col(\n    aes(fill = response_type_shared), \n    position = position_dodge(width = 0.9), \n    width = 0.9\n  ) +\n  geom_errorbar(\n    aes(group = response_type_shared), \n    position = position_dodge(width = 0.9), \n    linewidth = 1,\n    width = 0.2\n  ) +\n  scale_x_continuous(name = \"Region\", breaks = scales::breaks_width(1)) +\n  scale_y_continuous(name = \"Intersubject Correlation\") +\n  scale_fill_brewer(name = NULL, palette = \"Greens\", direction = -1) +\n  ggpubr::theme_pubr(base_size = 24, base_family = base_family) +\n  theme(axis.line = element_line(linewidth = 1))\nggsave(\"publish/sme_bars.png\", p_upper, width = 8, height = 6)\nstats <- targets::tar_read(stats_rsa_inter_by_resp) |> \n  rstatix::add_significance(p.col = \"p.value.adj\") |> \n  mutate(p.value.adj.signif = str_remove(p.value.adj.signif, \"ns\")) |> \n  complete(x, y, nesting(region_id))\np_lower <- stats |> \n  ggplot(aes(x, y)) +\n  geom_raster(aes(fill = p.value.adj)) +\n  geom_text(aes(label = p.value.adj.signif), size = 2) +\n  geom_text(\n    data = stats |> \n      filter(x == y) |> \n      mutate(label = as.character(x)),\n    mapping = aes(x, y, label = label), \n    size = 2.5,\n    hjust = 0.35\n  ) +\n  facet_grid(cols = vars(region_id)) +\n  scale_fill_gradient(\n    na.value = \"#EDF8E9\", \n    low = \"grey66\", high = \"grey92\", \n    guide = \"none\"\n  ) +\n  coord_fixed() +\n  theme_void(base_size = 8, base_family = base_family) +\n  theme(strip.text = element_blank())\nggsave(\"publish/sme_pairwise.png\", p_lower, width = 8, height = 2)\np_upper / p_lower + plot_layout(heights = c(2, 1))\nggsave(\"publish/sme.png\", width = 8, height = 5)\n```\n\n::: {.cell-output-display}\n![Whole trial time series](index_files/figure-html/fig-inter-mem-eff-1.png){#fig-inter-mem-eff width=672}\n:::\n\nAverage inter-subject representation similarity among different memory conditions\n:::\n\n\n# Predict Memory ability\n\nThe indicator calculation is based on [@manns2003].\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata_perf <- arrow::read_parquet(targets::tar_read(file_rs_group_trial)) |>\n  summarise(\n    mean_fisher_z = mean(fisher_z, na.rm = TRUE),\n    .by = c(region_id, subj_id)\n  ) |>\n  inner_join(\n    targets::tar_read(mem_perf), \n    by = \"subj_id\", \n    relationship = \"many-to-many\"\n  )\ntargets::tar_load(stats_pred_perf_rps)\n```\n:::\n\n\n## Separate recollection and familiarity\n\n\n::: {#fig-predict-performance-sep .cell .column-page}\n\n```{.r .cell-code}\nindex_names <- c(\"remember\", \"knowadj\")\nvis_scatter(\n  data_perf, \n  index_names, \n  ylab = \"d'\", \n  facet = facet_grid(\n    rows = vars(index_name),\n    cols = vars(region_id),\n    labeller = labeller(index_name = labels_index_name),\n    scales = \"free\"\n  )\n)\nggsave(\"publish/scatter_fr.png\", width = 12, height = 6)\nvis_cluster(\n  targets::tar_read(stats_pred_perf),\n  targets::tar_read(clusters_p_pred_perf),\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_fr.png\", width = 8, height = 4)\n\nvis_cluster(\n  stats_pred_perf_rps$stats_real,\n  stats_pred_perf_rps$clusters_p,\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  col_stats = statistic,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_fr_rps.png\", width = 8, height = 4)\n```\n\n::: {.cell-output-display}\n![Average all trial-level synchronization](index_files/figure-html/fig-predict-performance-sep-1.png){#fig-predict-performance-sep-1 width=1152}\n:::\n\n::: {.cell-output-display}\n![Time-windowed Cluster Results](index_files/figure-html/fig-predict-performance-sep-2.png){#fig-predict-performance-sep-2 width=1152}\n:::\n\n::: {.cell-output-display}\n![Average all trial-level synchronization](index_files/figure-html/fig-predict-performance-sep-3.png){#fig-predict-performance-sep-3 width=1152}\n:::\n\nPredict memory performance from individual-to-group synchronization\n:::\n\n\n## Averaged Scores\n\n\n::: {.cell .column-page}\n\n```{.r .cell-code}\nindex_names <- c(\"old\")\nvis_scatter(\n  data_perf, \n  index_names, \n  ylab = labels_index_name[index_names],\n  facet = facet_grid(\n    cols = vars(region_id),\n    scales = \"free\"\n  )\n)\nggsave(\"publish/scatter_old.png\", width = 12, height = 4)\nvis_cluster(\n  targets::tar_read(stats_pred_perf),\n  targets::tar_read(clusters_p_pred_perf),\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_old.png\", width = 6, height = 4)\nvis_cluster(\n  stats_pred_perf_rps$stats_real,\n  stats_pred_perf_rps$clusters_p,\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  col_stats = statistic,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_old_rps.png\", width = 6, height = 4)\n\nindex_names <- c(\"avg_rk\")\nvis_scatter(\n  data_perf, \n  index_names, \n  ylab = labels_index_name[index_names],\n  facet = facet_grid(\n    cols = vars(region_id),\n    scales = \"free\"\n  )\n)\nggsave(\"publish/scatter_avg_fr.png\", width = 12, height = 4)\nvis_cluster(\n  targets::tar_read(stats_pred_perf),\n  targets::tar_read(clusters_p_pred_perf),\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_avg_fr.png\", width = 6, height = 4)\nvis_cluster(\n  stats_pred_perf_rps$stats_real,\n  stats_pred_perf_rps$clusters_p,\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  col_stats = statistic,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_avg_fr_rps.png\", width = 6, height = 4)\n\nindex_names <- c(\"avg_score\")\nvis_scatter(\n  data_perf, \n  index_names, \n  ylab = labels_index_name[index_names],\n  facet = facet_grid(\n    cols = vars(region_id),\n    scales = \"free\"\n  )\n)\nggsave(\"publish/scatter_avg_score.png\", width = 12, height = 4)\nvis_cluster(\n  targets::tar_read(stats_pred_perf),\n  targets::tar_read(clusters_p_pred_perf),\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_avg_score.png\", width = 6, height = 4)\nvis_cluster(\n  stats_pred_perf_rps$stats_real,\n  stats_pred_perf_rps$clusters_p,\n  subset = index_name %in% index_names,\n  thresh_p = 0.1,\n  col_stats = statistic,\n  facet = facet_grid(\n    cols = vars(index_name),\n    labeller = labeller(\n      index_name = labels_index_name\n    )\n  )\n)\nggsave(\"publish/cluster_avg_score_rps.png\", width = 6, height = 4)\n```\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-1.png){#fig-predict-performance-avg-1 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-2.png){#fig-predict-performance-avg-2 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-3.png){#fig-predict-performance-avg-3 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-4.png){#fig-predict-performance-avg-4 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-5.png){#fig-predict-performance-avg-5 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-6.png){#fig-predict-performance-avg-6 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-7.png){#fig-predict-performance-avg-7 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-8.png){#fig-predict-performance-avg-8 width=1152}\n:::\n\n::: {.cell-output-display}\n![Predict memory performance from individual-to-group synchronization](index_files/figure-html/fig-predict-performance-avg-9.png){#fig-predict-performance-avg-9 width=1152}\n:::\n:::\n\n\n# Predict Memory Content\n\n\n::: {#fig-predict-content .cell .column-page}\n\n```{.r .cell-code}\nstats <- targets::tar_read(stats_pred_content) |>\n  filter(mantel == \"mantel\", method == \"gower\", include == \"all\")\nstats |> \n  unnest(perm) |> \n  ggplot(aes(perm)) +\n  geom_histogram() +\n  geom_vline(\n    data = stats,\n    mapping = aes(xintercept = statistic),\n    color = \"darkgreen\"\n  ) +\n  ggtext::geom_richtext(\n    data = stats |> \n      rstatix::add_significance(p.col = \"signif\") |> \n      mutate(\n        label = sprintf(\n          \"*r* = %.2f, *p* = %.3f%s\",\n          statistic,\n          signif,\n          str_remove(signif.signif, \"ns\")\n        )\n      ),\n    mapping = aes(\n      Inf, Inf,\n      label = label\n    ),\n    fill = NA, label.color = NA,\n    hjust = 1, vjust = 1.5\n  ) +\n  facet_grid(cols = vars(region_id), scales = \"free_x\") +\n  scale_x_continuous(name = \"Pearson's Correlation\") +\n  scale_y_continuous(name = \"Count\") +\n  theme_classic(base_size = 18, base_family = base_family)\nggsave(\"publish/pred_content_dist.png\", width = 12, height = 4)\n\ntargets::tar_load(clusters_p_pred_content)\ntargets::tar_load(stats_pred_content_real)\n\nvis_cluster(\n  stats_pred_content_real |> \n    filter(mantel_type == \"mantel\", method == \"gower\", include == \"all\"),\n  clusters_p_pred_content |> \n    filter(mantel_type == \"mantel\", method == \"gower\", include == \"all\"),\n  thresh_p = 0.1,\n  col_stats = statistic.r\n)\nggsave(\"publish/pred_content_dist_window.png\", width = 6, height = 4)\n\nstats_real_rps <- read_csv(\n  targets::tar_read(file_pred_content_rps_real_gower), \n  show_col_types = FALSE\n) |> \n  filter(mantel_type == \"mantel\", method == \"gower\", include == \"all\") |> \n  rename(region_id = region, window_id = time)\nclusters_p_rps <- targets::tar_read(clusters_p_pred_content_rps_gower) |> \n  filter(mantel_type == \"mantel\", method == \"gower\", include == \"all\") |> \n  rename(region_id = region)\nvis_cluster(\n  stats_real_rps,\n  clusters_p_rps,\n  thresh_p = 0.1,\n  col_stats = statistic_r\n)\nggsave(\"publish/pred_content_dist_rps.png\", width = 6, height = 4)\n\nstats_real_rps <- read_csv(\n  targets::tar_read(file_pred_content_rps_real_manhattan), \n  show_col_types = FALSE\n) |> \n  filter(mantel_type == \"mantel\", memory_precision == \"precise\") |> \n  rename(region_id = region, window_id = time)\nclusters_p_rps <- targets::tar_read(clusters_p_pred_content_rps_manhattan) |> \n  filter(mantel_type == \"mantel\", memory_precision == \"precise\") |> \n  rename(region_id = region)\nvis_cluster(\n  stats_real_rps,\n  clusters_p_rps,\n  thresh_p = 0.1,\n  col_stats = statistic_r\n)\nggsave(\"publish/pred_content_dist_rps_manhattan.png\", width = 6, height = 4)\n```\n\n::: {.cell-output-display}\n![Without Time Window](index_files/figure-html/fig-predict-content-1.png){#fig-predict-content-1 width=1152}\n:::\n\n::: {.cell-output-display}\n![With Time Window](index_files/figure-html/fig-predict-content-2.png){#fig-predict-content-2 width=1152}\n:::\n\n::: {.cell-output-display}\n![Without Time Window](index_files/figure-html/fig-predict-content-3.png){#fig-predict-content-3 width=1152}\n:::\n\n::: {.cell-output-display}\n![With Time Window](index_files/figure-html/fig-predict-content-4.png){#fig-predict-content-4 width=1152}\n:::\n\nDirect Mantel test without controlling memory ability similarity\n:::\n\n\n# References\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}