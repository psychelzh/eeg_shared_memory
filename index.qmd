---
title: Representation Analysis
author:
  - name: Liang Zhang
  - name: Jintao Sheng
format:
  html:
    code-fold: true
    toc: true
execute:
  warning: false
bibliography: references.bib
---

```{r}
#| label: setup

devtools::load_all()
```

# Inter-subject representation similarity

## Abstract vs Concrete

```{r}
#| label: fig-inter-abs-con
#| fig-cap: Verify if intersubject similarity of concrete is larger than that of abstract.
#| fig-subcap:
#|   - Without window
#|   - Dynamic of a trial

targets::tar_read(rsa_inter_common_trials) |>
  summarise(
    mean_se(fisher_z),
    .by = c(region_id, word_category)
  ) |>
  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +
  geom_col(aes(fill = word_category), position = position_dodge(width = 0.4), width = 0.4) +
  geom_errorbar(aes(group = word_category), position = position_dodge(width = 0.4), width = 0) +
  scale_x_continuous(name = "Region", breaks = scales::breaks_width(1)) +
  scale_y_continuous(name = "Intersubject Correlation") +
  ggsci::scale_fill_d3(name = "Word Type") +
  ggpubr::theme_pubclean()

targets::tar_read(summary_word_cat_rsa_inter_common_trials_window) |>
  ggplot(aes(window_id, y, ymax = ymax, ymin = ymin)) +
  geom_line(aes(color = word_category, group = word_category)) +
  geom_ribbon(aes(fill = word_category), alpha = 0.5) +
  scale_x_continuous(name = "Time (ms)", labels = \(x) x * 20) +
  scale_y_continuous(name = "Intersubject Correlation") +
  ggsci::scale_fill_d3(name = "Word Type") +
  ggsci::scale_color_d3(name = "Word Type") +
  facet_wrap(vars(region_id)) +
  ggpubr::theme_pubclean()
```

## Subsequent memory effect

```{r}
#| label: fig-inter-mem-eff
#| fig-cap: Average inter-subject representation similarity among different memory conditions
#| fig-subcap:
#|   - Whole trial time series
#|   - With time window [^window]

targets::tar_read(rsa_inter_common_trials) |>
  summarise(
    mean_se(fisher_z),
    .by = c(region_id, response_type_shared)
  ) |>
  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +
  geom_col(aes(fill = response_type_shared), position = position_dodge(width = 0.4), width = 0.4) +
  geom_errorbar(aes(group = response_type_shared), position = position_dodge(width = 0.4), width = 0) +
  scale_x_continuous(name = "Region", breaks = scales::breaks_width(1)) +
  scale_y_continuous(name = "Intersubject Correlation") +
  scale_fill_brewer(name = "Mem Type Common", palette = "Oranges", direction = -1) +
  ggpubr::theme_pubclean()

targets::tar_read(summary_word_mem_rsa_inter_common_trials_window) |>
  ggplot(aes(window_id, y, ymax = ymax, ymin = ymin)) +
  geom_line(aes(color = response_type_shared, group = response_type_shared)) +
  geom_ribbon(aes(fill = response_type_shared)) +
  scale_x_continuous(name = "Time (ms)", labels = \(x) x * 20) +
  scale_y_continuous(name = "Intersubject Correlation") +
  scale_color_brewer(
    name = "Mem Type Common", 
    palette = "Oranges", direction = -1, 
    aesthetics = c("colour", "fill")
  ) +
  facet_wrap(vars(region_id)) +
  ggpubr::theme_pubclean()
```

[^window]: Step size: 20 ms; Window length: 100 ms. The same below.

# Predict Memory ability

The indicator calculation is based on [@manns2003].

## Individual-to-group synchronization predicts memory performance

```{r}
#| label: fig-predict-performance
#| column: page
#| fig-width: 12
#| fig-height: 6
#| fig-cap: Predict memory performance from individual-to-group synchronization
#| fig-subcap:
#|   - Concatenate all trials into one time series
#|   - Average all trial-level synchronization
#|   - Time-windowed Cluster Results

targets::tar_load(mem_perf)
arrow::read_parquet(targets::tar_read(file_rs_group_whole)) |>
  inner_join(mem_perf, by = "subj_id", relationship = "many-to-many") |>
  filter(mem_type %in% names(labels_mem_type)) |>
  ggplot(aes(fisher_z, dprime, color = mem_type)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  ggpmisc::stat_correlation(
    ggpmisc::use_label(c("r", "p.value")),
    small.r = TRUE,
    small.p = TRUE
  ) +
  scale_color_brewer(palette = "Dark2", guide = "none") +
  scale_x_continuous(
    name = "Individual-to-Group Similarity",
    breaks = scales::breaks_pretty(n = 4)
  ) +
  scale_y_continuous(name = "d'") +
  facet_grid(
    rows = vars(mem_type),
    cols = vars(region_id),
    labeller = labeller(mem_type = labels_mem_type),
    scales = "free_x",
  ) +
  ggpubr::theme_pubr()

arrow::read_parquet(targets::tar_read(file_rs_group_trial)) |>
  summarise(
    mean_fisher_z = mean(fisher_z, na.rm = TRUE),
    .by = c(region_id, subj_id)
  ) |>
  inner_join(mem_perf, by = "subj_id", relationship = "many-to-many") |>
  filter(mem_type %in% names(labels_mem_type)) |>
  ggplot(aes(mean_fisher_z, dprime, color = mem_type)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  ggpmisc::stat_correlation(
    ggpmisc::use_label(c("r", "p.value")),
    small.r = TRUE,
    small.p = TRUE
  ) +
  scale_color_brewer(palette = "Dark2", guide = "none") +
  scale_x_continuous(
    name = "Average Individual-to-Group Similarity",
    breaks = scales::breaks_pretty(n = 4)
  ) +
  scale_y_continuous(name = "d'") +
  facet_grid(
    rows = vars(mem_type),
    cols = vars(region_id),
    labeller = labeller(mem_type = labels_mem_type),
    scales = "free_x",
  ) +
  ggpubr::theme_pubr()

clusters_p_pred_perf <- targets::tar_read(clusters_p_pred_perf) |>
  filter(mem_type %in% names(labels_mem_type))
stats_pred_perf <- targets::tar_read(stats_pred_perf) |>
  filter(mem_type %in% names(labels_mem_type))
stats_pred_perf |>
  ggplot(aes(window_id, estimate)) +
  geom_area(
    data = stats_pred_perf |>
      inner_join(
        clusters_p_pred_perf,
        by = join_by(region_id, mem_type, window_id >= start, window_id <= end)
      ),
    alpha = 0.5
  ) +
  geom_line() +
  facet_grid(
    rows = vars(mem_type),
    cols = vars(region_id),
    labeller = labeller(mem_type = labels_mem_type)
  ) +
  geom_text(
    aes(mid, estimate / 2, label = label),
    data = clusters_p_pred_perf |>
      mutate(mid = round((start + end) / 2)) |>
      inner_join(
        stats_pred_perf,
        by = join_by(region_id, mem_type, mid == window_id)
      ) |>
      mutate(
        label = str_glue(
          "italic('p')=='{rstatix::p_mark_significant(p_perm)}'"
        )
      ),
    parse = TRUE
  ) +
  scale_x_continuous(name = "Time (s)", labels = \(x) x * 0.02) +
  scale_y_continuous(name = "Pearson's Correlation") +
  ggh4x::coord_axes_inside(labels_inside = TRUE, expand = FALSE) +
  ggpubr::theme_pubr() +
  theme(
    axis.title.y.left = element_text(
      margin = margin(r = 30)
    ),
    panel.spacing.x = unit(1.5, "lines")
  )
```

# Predict Memory Content

```{r}
#| label: fig-predict-content
#| column: page
#| fig-width: 12
#| fig-height: 6
#| fig-cap: Direct Mantel test without controlling memory ability similarity
#| fig-subcap: 
#|   - Without Time Window
#|   - With Time Window

targets::tar_read(stats_pred_content_nonwin) |> 
  mutate(star = rstatix::p_mark_significant(signif) |> str_extract("\\*+")) |> 
  ggplot(aes(region_id, statistic, fill = acq)) +
  geom_col(position = position_dodge(width = 0.6), width = 0.5) +
  geom_text(
    aes(label = star), 
    position = position_dodge(width = 0.6),
    na.rm = TRUE
  ) +
  facet_grid(
    rows = vars(method), 
    cols = vars(include),
    labeller = labeller(
      include = labels_include,
      method = labels_method
    )
  ) +
  scale_x_continuous(name = "Region", breaks = scales::breaks_width(1)) +
  scale_y_continuous(name = "Pearson's Correlation") +
  ggsci::scale_fill_npg(name = "Level", labels = labels_acq) +
  ggpubr::theme_pubclean()

targets::tar_load(stats_pred_content_window)
targets::tar_load(clusters_p_pred_content)
ggplot() +
  geom_raster(
    data = stats_pred_content_window,
    mapping = aes(window_id, region_id, fill = statistic)
  ) +
  geom_rect(
    data = clusters_p_pred_content,
    mapping = aes(
      xmin = start - 0.5, 
      xmax = end + 0.5, 
      ymin = region_id - 0.5, 
      ymax = region_id + 0.5
    ),
    color = "black",
    fill = NA,
    na.rm = TRUE
  ) +
  geom_text(
    data = clusters_p_pred_content,
    mapping = aes(
      (start + end) / 2,
      region_id,
      label = rstatix::p_mark_significant(p_perm)
    ),
    color = "blue",
    na.rm = TRUE
  ) +
  scale_fill_gradient2(
    name = "Pearson's Correlation", 
    low = "blue", 
    high = "red"
  ) +
  scale_x_continuous(
    name = "Time (s)", 
    labels = \(x) x * 0.02, 
    expand = expansion(mult = .01)
  ) +
  scale_y_continuous(
    name = "Region",
    breaks = scales::breaks_width(1),
    expand = expansion(mult = .01)
  ) +
  facet_grid(
    rows = vars(method), 
    cols = vars(include),
    labeller = labeller(
      include = labels_include,
      method = labels_method
    )
  ) +
  theme_classic() +
  theme(legend.position = "top")
```

```{r}
#| label: fig-predict-content-partial
#| column: page
#| fig-width: 12
#| fig-height: 6
#| fig-cap: Partial Mantel test controlling memory ability similarity
#| fig-subcap: 
#|   - Without Time Window
#|   - With Time Window

targets::tar_read(stats_pred_content_partial_nonwin) |> 
  mutate(star = rstatix::p_mark_significant(signif) |> str_extract("\\*+")) |> 
  ggplot(aes(region_id, statistic, fill = acq)) +
  geom_col(position = position_dodge(width = 0.6), width = 0.5) +
  geom_text(
    aes(label = star), 
    position = position_dodge(width = 0.6),
    na.rm = TRUE
  ) +
  facet_grid(
    rows = vars(method), 
    cols = vars(include),
    labeller = labeller(
      include = labels_include,
      method = labels_method
    )
  ) +
  scale_x_continuous(name = "Region", breaks = scales::breaks_width(1)) +
  scale_y_continuous(name = "Pearson's Correlation") +
  ggsci::scale_fill_npg(name = "Level", labels = labels_acq) +
  ggpubr::theme_pubclean()

targets::tar_load(stats_pred_content_partial_window)
targets::tar_load(clusters_p_pred_content_partial)
ggplot() +
  geom_raster(
    data = stats_pred_content_window,
    mapping = aes(window_id, region_id, fill = statistic)
  ) +
  geom_rect(
    data = clusters_p_pred_content,
    mapping = aes(
      xmin = start - 0.5, 
      xmax = end + 0.5, 
      ymin = region_id - 0.5, 
      ymax = region_id + 0.5
    ),
    color = "black",
    fill = NA,
    na.rm = TRUE
  ) +
  geom_text(
    data = clusters_p_pred_content,
    mapping = aes(
      (start + end) / 2,
      region_id,
      label = rstatix::p_mark_significant(p_perm)
    ),
    color = "blue",
    na.rm = TRUE
  ) +
  scale_fill_gradient2(
    name = "Pearson's Correlation", 
    low = "blue", 
    high = "red"
  ) +
  scale_x_continuous(
    name = "Time (s)", 
    labels = \(x) x * 0.02, 
    expand = expansion(mult = .01)
  ) +
  scale_y_continuous(
    name = "Region",
    breaks = scales::breaks_width(1),
    expand = expansion(mult = .01)
  ) +
  facet_grid(
    rows = vars(method), 
    cols = vars(include),
    labeller = labeller(
      include = labels_include,
      method = labels_method
    )
  ) +
  theme_classic() +
  theme(legend.position = "top")
```

# References
