---
title: Representation Analysis
author:
  - name: Liang Zhang
  - name: Jintao Sheng
format:
  html:
    code-fold: true
    toc: true
execute:
  warning: false
bibliography: references.bib
---

```{r}
#| label: setup

library(tidyverse)
```

# Inter-subject representation similarity

```{r}
#| label: load-data-by-trial

rsa_inter_by_trial <- arrow::read_parquet(
  here::here("data/type-inter_acq-trial_rs.parquet")
)
events_encoding <- read_csv(
  here::here("data/group_task-wordencoding_events.csv"),
  show_col_types = FALSE
)
subjs_id <- unique(events_encoding$subj_id)
words_type <- events_encoding |>
  distinct(trial_id, word_id, word_category)
events_retrieval <- read_csv(
  here::here("data/group_task-wordretrieval_events.csv"),
  show_col_types = FALSE
)
subj_resp_types <- events_retrieval |>
  filter(memory_type > 0) |>
  select(subj_id, word_id, response_type)
rsa_inter_by_trial_with_resp <- rsa_inter_by_trial |>
  left_join(words_type, by = "trial_id") |>
  left_join(
    subj_resp_types,
    by = join_by(subj_id_row == subj_id, word_id)
  ) |>
  left_join(
    subj_resp_types,
    by = join_by(subj_id_col == subj_id, word_id),
    suffix = c("_row", "_col")
  ) |>
  filter(response_type_row == response_type_col) |>
  filter(
    sum(!is.na(fisher_z)) >= 5,
    .by = c(region_id, word_category, contains("subj_id"))
  ) |>
  rename(response_type = response_type_row) |>
  select(-response_type_col)
```

## Abstract vs Concrete

```{r}
#| label: fig-inter-abs-con
#| fig-cap: Verify if intersubject similarity of concrete is larger than that of abstract.

rsa_inter_by_trial_with_resp |>
  summarise(
    mean_se(fisher_z),
    .by = c(region_id, word_category)
  ) |>
  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +
  geom_col(aes(fill = word_category), position = position_dodge(width = 0.4), width = 0.4) +
  geom_errorbar(aes(group = word_category), position = position_dodge(width = 0.4), width = 0) +
  scale_x_continuous(name = "Region", breaks = scales::breaks_width(1)) +
  scale_y_continuous(name = "Intersubject Correlation") +
  ggsci::scale_fill_d3(name = "Word Type") +
  ggpubr::theme_pubclean()
```

## Subsequent memory effect

```{r}
#| label: fig-inter-mem-eff
#| fig-cap: Average inter-subject representation similarity among different memory conditions

rsa_inter_by_trial_with_resp |>
  summarise(
    mean_se(fisher_z),
    .by = c(region_id, response_type)
  ) |>
  mutate(
    response_type = case_match(
      response_type,
      "remember" ~ "Rem",
      "know" ~ "Know",
      "unsure" ~ "Unsure",
      "new" ~ "New",
      .ptype = factor(levels = c("Rem", "Know", "Unsure", "New"))
    )
  ) |>
  ggplot(aes(region_id, y, ymax = ymax, ymin = ymin)) +
  geom_col(aes(fill = response_type), position = position_dodge(width = 0.4), width = 0.4) +
  geom_errorbar(aes(group = response_type), position = position_dodge(width = 0.4), width = 0) +
  scale_x_continuous(name = "Region", breaks = scales::breaks_width(1)) +
  scale_y_continuous(name = "Intersubject Correlation") +
  scale_fill_brewer(name = "Mem Type", palette = "Oranges", direction = -1) +
  ggpubr::theme_pubclean()
```

# Predict Memory ability

The indicator calculation is based on [@manns2003].

```{r}
#| label: calc-mem-ability

# mainly d' scores for remember and know
count_trials <- events_retrieval |>
  distinct(word_id, old_new) |>
  count(old_new, name = "n_total")
mem_ability <- events_retrieval |>
  mutate(
    old_new = factor(old_new, c("old", "new")),
    response_type = factor(
      response_type,
      c("remember", "know", "unsure", "new")
    )
  ) |>
  filter(memory_type > 0) |>
  count(subj_id, response_type, old_new, .drop = FALSE) |>
  left_join(count_trials, by = "old_new") |>
  mutate(
    rate = (n + 0.5) / (n_total + 1),
    .by = c(subj_id, response_type)
  ) |>
  filter(response_type %in% c("remember", "know")) |>
  mutate(
    type = case_match(
      old_new,
      "old" ~ "hr",
      "new" ~ "far"
    )
  ) |>
  pivot_wider(
    id_cols = subj_id,
    names_from = c(response_type, type),
    values_from = rate
  ) |>
  mutate(
    dplyover::across2(
      contains("know"),
      contains("remember"),
      ~ .x / (1 - .y),
      .names = "knowadj_{suf}"
    )
  ) |>
  mutate(
    dplyover::across2(
      contains("hr"),
      contains("far"),
      ~ qnorm(.x) - qnorm(.y),
      .names = "dprime_{pre}"
    )
  ) |>
  select(subj_id, starts_with("dprime")) |>
  pivot_longer(
    starts_with("dprime"),
    names_to = c(".value", "mem_type"),
    names_pattern = "(.+)_(.+)"
  )
```

## Individual-to-group synchronization predicts memory performance

```{r}
#| label: fig-predict-performance
#| column: page
#| fig-width: 12
#| fig-height: 6
#| fig-cap: Predict memory performance from individual-to-group synchronization
#| fig-subcap:
#|   - Concatenate all trials into one time series
#|   - Average all trial-level synchronization

rsa_group_whole <- arrow::read_parquet(
  here::here("data/type-group_acq-whole_rs.parquet")
)
rsa_group_whole |>
  inner_join(mem_ability, by = "subj_id", relationship = "many-to-many") |>
  filter(mem_type %in% c("knowadj", "remember")) |>
  ggplot(aes(fisher_z, dprime, color = mem_type)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  ggpmisc::stat_correlation(
    ggpmisc::use_label(c("r", "p.value")),
    small.r = TRUE,
    small.p = TRUE
  ) +
  scale_color_brewer(palette = "Dark2", guide = "none") +
  scale_x_continuous(
    name = "Individual-to-Group Similarity",
    breaks = scales::breaks_pretty(n = 4)
  ) +
  scale_y_continuous(name = "d'") +
  facet_grid(
    rows = vars(mem_type),
    cols = vars(region_id),
    labeller = labeller(
      mem_type = c(
        knowadj = "Familiarity",
        remember = "Recollection"
      )
    ),
    scales = "free_x",
  ) +
  ggpubr::theme_pubr()

rsa_group_by_trial <- arrow::read_parquet(
  here::here("data/type-group_acq-trial_rs.parquet")
)
rsa_group_by_trial |>
  summarise(
    mean_fisher_z = mean(fisher_z, na.rm = TRUE),
    .by = c(region_id, subj_id)
  ) |>
  inner_join(mem_ability, by = "subj_id", relationship = "many-to-many") |>
  filter(mem_type != "know") |>
  ggplot(aes(mean_fisher_z, dprime, color = mem_type)) +
  geom_point() +
  stat_smooth(method = "lm", formula = y ~ x) +
  ggpmisc::stat_correlation(
    ggpmisc::use_label(c("r", "p.value")),
    small.r = TRUE,
    small.p = TRUE
  ) +
  scale_color_brewer(palette = "Dark2", guide = "none") +
  scale_x_continuous(
    name = "Average Individual-to-Group Similarity",
    breaks = scales::breaks_pretty(n = 4)
  ) +
  scale_y_continuous(name = "d'") +
  facet_grid(
    rows = vars(mem_type),
    cols = vars(region_id),
    labeller = labeller(
      mem_type = c(
        knowadj = "Familiarity",
        remember = "Recollection"
      )
    ),
    scales = "free_x",
  ) +
  ggpubr::theme_pubr()
```

# References
